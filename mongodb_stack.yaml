heat_template_version: 2013-05-23

description: Deploys a salt master

parameters:
  keyname:
    type: string
    description: Key name for loggin in to instances
  image:
    type: string
    description: Image name
  floating-network:
    type: string
    description: Network to allocate floating IP from. 
  egle-key-key-name:
    type: string
    default: egle-key
    label: Stack communication key name
    description: Name of the keypair that will be created for node-to-node communication within the stack.
  minion-count:
    type: number
    default: 2
    label: Number of salt minions

resources:
  secret:
    type: OS::Heat::RandomString
    properties:
      length: 32
      character_classes:
        - class: lettersdigits

  egle-key:
    type: OS::Nova::KeyPair
    properties:
      name:
        get_param: egle-key-key-name
      save_private_key: true 

  net:
    type: OS::Neutron::Net

  subnet:
    type: OS::Neutron::Subnet
    properties:
      network:
        get_resource: net
      cidr: 10.10.10.0/24
      dns_nameservers:
        - 8.8.8.8
        - 4.2.2.2

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: 
          get_param: floating-network

  interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id:
        get_resource: router
      subnet_id: 
        get_resource: subnet

  master-ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: 
        get_param: floating-network

  master-port:
    type: OS::Neutron::Port
    properties:
      network_id: 
        get_resource: net

  config-salt-master:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
        - name: public_key
        - name: state_repos
      config: |
        #!/bin/bash
        chmod 0700 /root/.ssh/egle-key_rsa
        chmod 0600 /srv/pillar/mongodb.sls

        # Add egle-key from minions to master
        echo "$public_key" >> /root/.ssh/authorized_keys

        # Install git
        apt-get install -y git
            
        # Install salt master
        echo "Install Salt Master"
        curl -L http://bootstrap.saltstack.org | sh -s -- -M -N
        mkdir /srv/salt
        echo -e 'file_roots:\n  base:\n    - /srv/salt' >> /etc/salt/master

        # Clone state/formula repos in state root directory
        cd /srv/salt
        while read -r line
        do
            if [ -n "$line" ]; then
                git clone $line
            fi
        done <<< "$state_repos"

        # Finally - Restart salt service
        service salt-master restart

  config-salt-minion:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
        - name: public_key
        - name: master
      config: |
        #!/bin/bash
        chmod 0700 /root/.ssh/egle-key_rsa
            
        # Add egle-key from minions to master
        echo "$public_key" >> /root/.ssh/authorized_keys

        # Install salt minion
        curl -L http://bootstrap.saltstack.org | sh -s
        echo master: $master >> /etc/salt/minion

        service salt-minion restart

        ssh-keyscan -H $master >> /root/.ssh/known_hosts

        echo "Sleeping for 20s"
        sleep 20

        MASTER_PKI_PATH="/etc/salt/pki/master/minions/"
        MASTER_PKI_PATH_PRE="/etc/salt/pki/master/minions_pre/"
        MINION_PKI_PATH="/etc/salt/pki/minion/minion.pub"
        HOSTNAME=`hostname --fqdn`

        cp $MINION_PKI_PATH /root/minion_key

        scp -i /root/.ssh/egle-key_rsa /root/minion_key root@$master:/tmp/$HOSTNAME

        ssh -i /root/.ssh/egle-key_rsa root@$master "mv /tmp/$HOSTNAME $MASTER_PKI_PATH$HOSTNAME; chmod 700 $MASTER_PKI_PATH$HOSTNAME; rm $MASTER_PKI_PATH_PRE$HOSTNAME"

        service salt-minion restart
        rm /root/minion_key
        rm /root/.ssh/egle-key_rsa

  deploy-salt-master:
    type: OS::Heat::SoftwareDeployment
    properties:
      input_values:
        public_key:
          get_attr:
            - egle-key
            - public_key
        state_repos: |
          https://github.com/eglute/mongodb-formula.git
      config:
        get_resource: config-salt-master
      server:
        get_resource: master

  master:
    type: OS::Nova::Server
    depends_on: interface
    properties:
      key_name:
        get_param: keyname
      image: 
        get_param: image
      flavor: m1.small
      name: master
      personality:
        /root/.ssh/egle-key_rsa:
          get_attr:
            - egle-key
            - private_key

        /srv/salt/top.sls: |
          base:
            'roles:mongodb':
              - match: grain
              - mongodb.mongodb
            'roles:mongos':
              - match: grain
              - mongodb.mongos
              - sync
            'roles:mongoconfigsrv':
              - match: grain
              - mongodb.mongoconfigsrv

        /srv/pillar/top.sls: |
          base:
            '*':
              - app
            'roles:mongos':
              - match: grain
              - mongodb
            'roles:mongodb':
              - match: grain
              - mongodb
        /srv/pillar/app.sls: |
          interfaces:
            private: eth0
            public: eth0
          mine_functions:
            network.ip_addrs: [eth0]
            network.interfaces: []
          mine_interval: 1

        /srv/pillar/mongodb.sls: |
		  mongodb:
		    use_ppa: False
		    version: 2.6.4
		    package_name: mongodb-org
		    mongo_directory: /mongodb
		    inclue_tools: True
		    manage_replica_set: True
		    reconfigure_replica_set: False
		    config_svr: False
		    shard_svr: True
		    settings:
		      db_path: /mongodb/data
		      bind_ip: {{ salt['grains.get']('ip_interfaces:eth0')[0] }}
		      log_path: /mongodb/log
		      log_append: True
		      rest: True
		  mongos:
		    use_ppa: False
		    version: 2.6.4
		    package_name: mongodb-org-mongos
		    settings:
		      log_file: /mongodb/log/mongos.log
		      config_svrs: "23.253.107.118:27017,23.253.72.87:27017,23.253.72.232:27017"
		
        /srv/pillar/mongos.sls: |
			mongodb:
			  use_ppa: False
			  version: 2.6.4
			  package_name: mongodb-org
			  mongo_directory: /mongodb
			  inclue_tools: True
			  manage_replica_set: False
			  reconfigure_replica_set: False
			  config_svr: False
			  shard_svr: False
			  settings:
			    db_path: /mongodb/data
			    bind_ip: {{ salt['grains.get']('ip_interfaces:eth0')[0] }}
			    log_path: /mongodb/log
			    log_append: True
			    rest: True

			mongos:
			  version: 2.6.4
			  package_name: mongodb-org-mongos
			  settings:
			    log_file: /mongodb/log/mongos.log
			    config_svrs: "23.253.107.118:27017,23.253.72.87:27017,23.253.72.232:27017"
			
		/srv/pillar/mongoconfigsrv.sls |
		  mongodb:
			  use_ppa: False
			  version: 2.6.4
			  package_name: mongodb-org
			  mongo_directory: /mongodb
			  inclue_tools: True
			  manage_replica_set: False
			  reconfigure_replica_set: False
			  config_svr: True
			  settings:
			    bind_ip: {{ salt['grains.get']('ip_interfaces:eth0')[0] }}
			    db_path: /mongodb/data
			    log_path: /mongodb/log
			    log_append: True
			    rest: True

			mongos:
			  use_ppa: False
			  version: 2.6.4
			  package_name: mongodb-org-mongos
			  settings:
			    log_file: /mongodb/log/mongos.log
			    config_svrs: "23.253.107.118:27017,23.253.72.87:27017,23.253.72.232:27017"

      networks:
        - port:
            get_resource: master-port
      user_data_format: SOFTWARE_CONFIG

  master-floating-ip-ass: 
    type: OS::Neutron::FloatingIPAssociation
    properties: 
      floatingip_id:
        get_resource: master-ip
      port_id:
        get_resource: master-port

  minion-group-mongos:
    type: OS::Heat::ResourceGroup
    depends_on: deploy-salt-master
    properties:
      count:
        get_param: minion-count
      resource_def:
        type: Salt::Minion
        properties:
          flavor: m1.small
          private_key:
            get_attr:
              - egle-key
              - private_key
          public_key:
            get_attr:
              - egle-key
              - public_key
          image:
            get_param: image
          network:
            get_resource: net
          master:
            get_attr:
              - master
              - first_address
          minion-config:
            get_resource: config-salt-minion
          minion-roles: "mongos"

  minion-mongoconfigsrv-ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: 
        get_param: floating-network

  minion-mongoconfigsrv-port:
    type: OS::Neutron::Port
    properties:
      network_id: 
        get_resource: net

  minion-mongoconfigsrv:
    type: OS::Nova::Server
    depends_on: interface
    properties:
      image:
        get_param: image
      flavor: m1.small
      personality: 
        /root/.ssh/egle-key_rsa:
          get_attr:
            - egle-key
            - private_key
        /etc/salt/grains: |
          roles:
            - mongoconfigsrv
      networks:
        - port:
            get_resource: minion-mongoconfigsrv-port
      user_data_format: SOFTWARE_CONFIG

  minion-mongoconfigsrv-floating-ip-ass: 
    type: OS::Neutron::FloatingIPAssociation
    properties: 
      floatingip_id:
        get_resource: minion-mongoconfigsrv-ip
      port_id:
        get_resource: minion-mongoconfigsrv-port

  deploy-mongoconfigsrv:
    type: OS::Heat::SoftwareDeployment
    depends_on: deploy-salt-master
    properties:
      input_values:
        public_key:
          get_attr:
            - egle-key
            - public_key
        master:
          get_attr:
            - master
            - first_address
      config:
        get_resource: config-salt-minion
      server:
        get_resource: minion-mongoconfigsrv
 
  minion-mongodb:
    type: OS::Nova::Server
    depends_on: interface
    properties:
      image:
        get_param: image
      flavor: m1.small
      personality: 
        /root/.ssh/egle-key_rsa:
          get_attr:
            - egle-key
            - private_key
        /etc/salt/grains: |
          roles:
            - mongodb
      networks:
        - network:
            get_resource: net
      user_data_format: SOFTWARE_CONFIG

  deploy-mongodb:
    type: OS::Heat::SoftwareDeployment
    depends_on: deploy-salt-master
    properties:
      input_values:
        public_key:
          get_attr:
            - egle-key
            - public_key
        master:
          get_attr:
            - master
            - first_address
      config:
        get_resource: config-salt-minion
      server:
        get_resource: minion-mongodb

  config-deploy:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash
        salt '*' saltutil.refresh_pillar
        salt '*' mine.update
        salt '*' state.highstate

  deploy:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: config-deploy
      server:
        get_resource: master
    depends_on:
      - deploy-salt-master
      - minion-group-mongos
      - deploy-mongodb
      - deploy-mongoconfigsrv

outputs:
  master-ip:
    value: 
      get_attr:
        - master-ip
        - floating_ip_address
  master-stdout:
    value:
      get_attr:
       - deploy-salt-master
       - deploy_stdout
  master-stderr:
    value:
      get_attr:
        - deploy-salt-master
        - deploy_stderr
  minion-ip:
    value:
      get_attr:
        - minion-group-mongos
        - minion-ip
  minion-stdout:
    value:
      get_attr:
        - minion-group-mongos
        - minion-stdout
  minion-stderr:
    value:
      get_attr:
        - minion-group-mongos
        - minion-stderr
